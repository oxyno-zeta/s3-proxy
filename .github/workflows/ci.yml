name: ci
on:
  push:
    branches-ignore:
      - "github-pages"
  pull_request: {}
jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      go: ${{ steps.filter.outputs.go }}
      config: ${{ steps.filter.outputs.config }}
      docker: ${{ steps.filter.outputs.docker }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            go:
              - '**/*.go'
              - 'go.mod'
              - 'go.sum'
            config:
              - '.github/workflows/ci.yml'
              - '.goreleaser.yml'
              - '.golangci.yaml'
              - 'Makefile'
            docker:
              - 'Dockerfile'
  lint:
    if: |
      (needs.changes.outputs.go == 'true') ||
      (needs.changes.outputs.config == 'true')
    runs-on: ubuntu-latest
    needs:
      - changes
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.16.0"
      - run: make code/lint
  build:
    if: |
      (needs.changes.outputs.go == 'true') ||
      (needs.changes.outputs.config == 'true')
    runs-on: ubuntu-latest
    needs:
      - changes
      - lint
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.16.0"
      - run: make code/build
  build-cross:
    if: |
      (needs.changes.outputs.go == 'true') ||
      (needs.changes.outputs.config == 'true')
    runs-on: ubuntu-latest
    needs:
      - changes
      - lint
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.16.0"
      - run: make code/build-cross
  test:
    if: |
      (needs.changes.outputs.go == 'true') ||
      (needs.changes.outputs.config == 'true') ||
      (needs.changes.outputs.docker == 'true')
    runs-on: ubuntu-latest
    needs:
      - changes
      - lint
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.16.0"
      - run: |
          if [ -f /usr/local/bin/dockerize ]; then
            echo "dockerize found; skipping installation";
          else
            wget https://github.com/jwilder/dockerize/releases/download/v0.6.0/dockerize-linux-amd64-v0.6.0.tar.gz \
              && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.0.tar.gz \
              && rm dockerize-linux-amd64-v0.6.0.tar.gz;
          fi
      - run: make setup/services
      - run: dockerize -wait tcp://localhost:8088 -timeout 5m
      - run: dockerize -wait tcp://localhost:8181 -timeout 5m
      - run: docker logs keycloak
      - run: make test/all
      - run: make test/coverage
      - run: go get github.com/mattn/goveralls
      - env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goveralls -coverprofile=c.out -service=github
